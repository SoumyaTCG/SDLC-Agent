import streamlit as st
from IPython.display import Image, display


class DisplayResultStreamlit:
    """
    Handles displaying the result generated by the SDLC agent.
    """

    def __init__(self, sdlc_graph, user_requirement):
        """
        Initializes the result display component.

        Args:
            sdlc_graph (object): Compiled graph object.
            user_requirement (str): User-provided input.
        """
        self.sdlc_graph = sdlc_graph
        self.user_requirement = user_requirement

    def display_result_on_ui(self):
        """
        Displays the output from the SDLC agent on the UI.
        """
        with st.spinner("🚀 Generating response..."):
            try:
                # DEBUG: Check if the graph outputs any updates
                debug_output = self.sdlc_graph.invoke({'requirement': self.user_requirement})
                st.write("DEBUG: Full Graph Output", debug_output)

                for updates in self.sdlc_graph.stream({'requirement': self.user_requirement}):
                    st.write("DEBUG: Updates from Graph", updates)  # Debugging line

                if not updates:
                    return  # Skip empty updates

                # Extract specific sections
                if "user_stories" in updates and updates["user_stories"]:
                    st.subheader("📖 User Story")
                    st.write(updates["user_stories"])

                if "design_specification" in updates and updates["design_specification"]:
                    st.subheader("📐 Design Specification")
                    st.write(updates["design_specification"])

                if "code" in updates and updates["code"]:
                    st.subheader("💻 Code")
                    st.code(updates["code"], language="python")

                if "test_cases" in updates and updates["test_cases"]:
                    st.subheader("🧪 Test Cases")
                    st.write(updates["test_cases"])

            except Exception as e:
                st.error(f"❌ An error occurred: {e}")
